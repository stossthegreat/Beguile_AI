// android/settings.gradle
import java.util.Properties

pluginManagement {
  repositories {
    // ✅ add Flutter’s remote Maven repo so Gradle can fetch engine AARs
    maven { url "https://storage.googleapis.com/download.flutter.io" }
    google()
    mavenCentral()
    gradlePluginPortal()
  }

  // Locate Flutter SDK
  def flutterSdkPath = null
  def localPropsFile = new File(rootProject.projectDir, "local.properties")
  if (localPropsFile.exists()) {
    def Properties p = new Properties()
    localPropsFile.withReader("UTF-8") { r -> p.load(r) }
    flutterSdkPath = p.getProperty("flutter.sdk")
  }
  if (flutterSdkPath == null) {
    throw new GradleException("Flutter SDK not found. Define flutter.sdk in android/local.properties.")
  }

  // Let Gradle find the Flutter Gradle plugin
  includeBuild("$flutterSdkPath/packages/flutter_tools/gradle")
}

plugins {
  id "dev.flutter.flutter-plugin-loader" version "1.0.0"
  id "com.android.application" version "8.4.2" apply false
  id "org.jetbrains.kotlin.android" version "1.9.24" apply false
}

include(":app")

dependencyResolutionManagement {
  repositoriesMode.set(RepositoriesMode.PREFER_SETTINGS)
  repositories {
    // ✅ FIRST: local engine cache (if present)
    maven { url("$flutterSdkPath/bin/cache/artifacts/engine/android") }
    // ✅ SECOND: Flutter’s remote Maven repo (fallback)
    maven { url "https://storage.googleapis.com/download.flutter.io" }
    // Then the usuals
    google()
    mavenCentral()
  }
}

rootProject.name = "app" 